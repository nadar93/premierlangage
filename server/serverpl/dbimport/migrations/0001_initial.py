# Generated by Django 2.0.5 on 2018-06-04 11:24

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthorizedDomainNames',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.TextField()),
            ],
            options={
                'db_table': 'authorized_domain_names',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exercises_can_be_attached', models.NullBooleanField()),
                ('wims_en_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xwims_language', models.CharField(max_length=5)),
                ('xwims_translation', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'category_translation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClassmanagementCourse',
            fields=[
                ('id', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('label', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'classmanagement_course',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClassmanagementCourseActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'classmanagement_course_activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClassmanagementCourseStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'classmanagement_course_student',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClassmanagementCourseTeacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'classmanagement_course_teacher',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serverurl', models.CharField(max_length=255)),
                ('wimsurl', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'configuration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('popularity', models.IntegerField()),
                ('wims_author_email', models.CharField(blank=True, max_length=255, null=True)),
                ('wims_exercise_file_name', models.CharField(max_length=255)),
                ('wims_identifier', models.CharField(max_length=255)),
                ('wims_language', models.CharField(blank=True, max_length=255, null=True)),
                ('wims_title', models.CharField(max_length=255)),
                ('wims_version', models.CharField(blank=True, max_length=255, null=True)),
                ('wims_wording', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'exercise',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExerciseAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'exercise_author',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExerciseComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complete_date', models.DateField()),
                ('content', models.TextField()),
                ('is_public', models.BooleanField()),
            ],
            options={
                'db_table': 'exercise_comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExerciseIsWrong',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error_description', models.TextField()),
            ],
            options={
                'db_table': 'exercise_is_wrong',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExercisesCategoryVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'exercises_category_vote',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExercisesKeywordsVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'exercises_keywords_vote',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExercisesLevelsVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'exercises_levels_vote',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExercisesScoreVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField()),
            ],
            options={
                'db_table': 'exercises_score_vote',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FilebrowserDirectory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024, unique=True)),
                ('remote', models.CharField(max_length=1024)),
                ('root', models.CharField(max_length=1024)),
            ],
            options={
                'db_table': 'filebrowser_directory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FilebrowserDirectoryReadAuth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'filebrowser_directory_read_auth',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FilebrowserDirectoryWriteAuth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'filebrowser_directory_write_auth',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wims_en_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'keyword',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xwims_language', models.CharField(max_length=5)),
                ('xwims_translation', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'keyword_translation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Levels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wims_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'levels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoaderPl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('json', models.TextField()),
                ('name', models.CharField(max_length=100)),
                ('rel_path', models.CharField(max_length=360)),
            ],
            options={
                'db_table': 'loader_pl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoaderPltp',
            fields=[
                ('sha1', models.CharField(max_length=160, primary_key=True, serialize=False)),
                ('json', models.TextField()),
                ('name', models.CharField(max_length=50)),
                ('rel_path', models.CharField(max_length=360)),
            ],
            options={
                'db_table': 'loader_pltp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoaderPltpPl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'loader_pltp_pl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NextCategoryForExercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'next_category_for_exercise',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayexoActivity',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('open', models.BooleanField()),
            ],
            options={
                'db_table': 'playexo_activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayexoActivitytest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'playexo_activitytest',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayexoAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField()),
                ('seed', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateTimeField()),
                ('grade', models.IntegerField()),
            ],
            options={
                'db_table': 'playexo_answer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PreviousCategoryForExercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'previous_category_for_exercise',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SandboxSandbox',
            fields=[
                ('name', models.CharField(max_length=50)),
                ('url', models.CharField(max_length=860, primary_key=True, serialize=False)),
                ('priority', models.IntegerField()),
            ],
            options={
                'db_table': 'sandbox_sandbox',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfileProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('consumer_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('editor_theme', models.IntegerField()),
                ('role', models.IntegerField()),
                ('color_blindness', models.IntegerField()),
            ],
            options={
                'db_table': 'user_profile_profile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfileProfileActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'user_profile_profile_activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=255)),
                ('first_name', models.CharField(max_length=255)),
                ('is_banned', models.BooleanField()),
                ('is_certified', models.BooleanField()),
                ('is_registered', models.BooleanField()),
                ('is_root', models.BooleanField()),
                ('language', models.CharField(max_length=5)),
                ('last_name', models.CharField(max_length=255)),
                ('password_hash', models.CharField(max_length=255)),
                ('password_salt', models.CharField(max_length=255)),
                ('random_identifier', models.IntegerField()),
                ('registration_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserSelectedCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'user_selected_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Worksheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField()),
                ('description', models.TextField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'worksheet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorksheetExercises',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameters', models.TextField(blank=True, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'worksheet_exercises',
                'managed': False,
            },
        ),
    ]
